@model LetterAmazer.Websites.Client.ViewModels.CreateSingleLetterModel

@section header {
    <script type="text/javascript" src="@Url.Content("~/Scripts/ckeditor/ckeditor.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/ckeditor/config.js")"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBulh9LO7V3Eb80BF0-h6BW6MyiO-qNTC0&sensor=false"></script>

    <link href="@Url.Content("~/Scripts/uploadify/uploadify.css")" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/uploadify/jquery.uploadify.min.js")"></script>

    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Scripts/dropzone/css/dropzone.css")" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/dropzone/dropzone.min.js")"></script>

    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/knockout-3.0.0.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/internals/country.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/internals/sendaletter-viewmodel.js")"></script>
}

<div class="jumbotron-white">
    <div class="container">
        <div class="text-center promotionMargin">
            <img src="/Content/images/letteramazer.png" />
            <div>
                <p class="frontpageLead">
                    @ViewRes.EmailSendingSteps
                </p>
            </div>
        </div>
    </div>
</div>
<div class="jumbotron-lightblue">
    <div class="container">
        <div class="promotionMargin">
            @using (Html.BeginForm("Index", "SingleLetter", FormMethod.Post, new { id = "sendALetterForm" }))
            {
                <div class="row">
                    <div class="col-lg-7">
                        <div class="sendLettersForm">
                            <div id="sendaletter-step1" data-bind="visible: showStepOne()">
                                <div class="row">
                                    <div class="col-lg-11 col-lg-offset-1">
                                        <p class="frontpageLeadExplanation">1. Tell us where we should send your letter</p>
                                        <p class="">
                                            Your e-mail<span class="input-required">*</span><br>
                                            <input class="input-lg valid" id="Email" name="Email" placeholder="Enter your e-mail" type="text" value="">
                                        </p>
                                        <p class="">
                                            Recipient name<span class="input-required">*</span><br>
                                            <input class="input-lg valid" data-bind="value: receiver" id="RecipientName" name="RecipientName" placeholder="Enter recipient" type="text" value="">
                                        </p>
                                        <p class="">
                                            Destination country<span class="input-required">*</span><br>
                                            <select class="form-control sendaletter_countrylist valid" data-bind="value:countryId" id="SelectedCountry" name="SelectedCountry"><option value="3">Afghanistan</option>
<option value="6">Albania</option>
<option value="62">Algeria</option>
<option value="11">American Samoa</option>
<option value="1">Andorra</option>
<option value="8">Angola</option>
<option value="4">Antigua and Barbuda</option>
<option value="10">Argentina</option>
<option value="7">Armenia</option>
<option value="13">Australia</option>
<option value="12">Austria</option>
<option value="16">Azerbaijan</option>
<option value="32">Bahamas</option>
<option value="23">Bahrain</option>
<option value="19">Bangladesh</option>
<option value="18">Barbados</option>
<option value="36">Belarus</option>
<option value="20">Belgium</option>
<option value="37">Belize</option>
<option value="25">Benin</option>
<option value="33">Bhutan</option>
<option value="29">Bolivia</option>
<option value="17">Bosnia and Herzegovina</option>
<option value="35">Botswana</option>
<option value="31">Brazil</option>
<option value="28">Brunei</option>
<option value="22">Bulgaria</option>
<option value="21">Burkina Faso</option>
<option value="24">Burundi</option>
<option value="117">Cambodia</option>
<option value="47">Cameroon</option>
<option value="38">Canada</option>
<option value="52">Cape Verde</option>
<option value="124">Cayman Islands</option>
<option value="41">Central African Republic</option>
<option value="215">Chad</option>
<option value="46">Chile</option>
<option value="48">China</option>
<option value="49">Colombia</option>
<option value="119">Comoros</option>
<option value="50">Costa Rica</option>
<option value="98">Croatia</option>
<option value="51">Cuba</option>
<option value="55">Cyprus</option>
<option value="56">Czech Republic</option>
<option value="40">Democratic Republic of the Congo</option>
<option value="59">Denmark</option>
<option value="58">Djibouti</option>
<option value="61">Dominican Republic</option>
<option value="221">East Timor</option>
<option value="63">Ecuador</option>
<option value="65">Egypt</option>
<option value="210">El Salvador</option>
<option value="88">Equatorial Guinea</option>
<option value="67">Eritrea</option>
<option value="64">Estonia</option>
<option value="69">Ethiopia</option>
<option value="74">Faroe Islands</option>
<option value="71">Fiji</option>
<option value="70">Finland</option>
<option value="75">France</option>
<option value="76">Gabon</option>
<option value="85">Gambia</option>
<option value="79">Georgia</option>
<option value="57">Germany</option>
<option value="82">Ghana</option>
<option value="83">Gibraltar</option>
<option value="89">Greece</option>
<option value="84">Greenland</option>
<option value="78">Grenada</option>
<option value="92">Guam</option>
<option value="91">Guatemala</option>
<option value="86">Guinea</option>
<option value="93">Guinea-Bissau</option>
<option value="94">Guyana</option>
<option value="99">Haiti</option>
<option value="97">Honduras</option>
<option value="95">Hong Kong</option>
<option value="100">Hungary</option>
<option value="109">Iceland</option>
<option value="105">India</option>
<option value="101">Indonesia</option>
<option value="108">Iran</option>
<option value="107">Iraq</option>
<option value="102">Ireland</option>
<option value="104">Isle of Man</option>
<option value="103">Israel</option>
<option value="110">Italy</option>
<option value="44">Ivory Coast</option>
<option value="112">Jamaica</option>
<option value="114">Japan</option>
<option value="113">Jordan</option>
<option value="125">Kazakhstan</option>
<option value="115">Kenya</option>
<option value="245">Kosovo</option>
<option value="123">Kuwait</option>
<option value="116">Kyrgyzstan</option>
<option value="126">Laos</option>
<option value="135">Latvia</option>
<option value="127">Lebanon</option>
<option value="132">Lesotho</option>
<option value="131">Liberia</option>
<option value="136">Libya</option>
<option value="129">Liechtenstein</option>
<option value="133">Lithuania</option>
<option value="134">Luxembourg</option>
<option value="148">Macao</option>
<option value="144">Macedonia</option>
<option value="142">Madagascar</option>
<option value="156">Malawi</option>
<option value="158">Malaysia</option>
<option value="155">Maldives</option>
<option value="145">Mali</option>
<option value="153">Malta</option>
<option value="150">Martinique</option>
<option value="151">Mauritania</option>
<option value="154">Mauritius</option>
<option value="157">Mexico</option>
<option value="139">Moldova</option>
<option value="138">Monaco</option>
<option value="147">Mongolia</option>
<option value="140">Montenegro</option>
<option value="137">Morocco</option>
<option value="159">Mozambique</option>
<option value="146">Myanmar [Burma]</option>
<option value="160">Namibia</option>
<option value="168">Nepal</option>
<option value="166">Netherlands</option>
<option value="171">New Zealand</option>
<option value="165">Nicaragua</option>
<option value="162">Niger</option>
<option value="164">Nigeria</option>
<option value="121">North Korea</option>
<option value="167">Norway</option>
<option value="172">Oman</option>
<option value="178">Pakistan</option>
<option value="183">Palestine</option>
<option value="173">Panama</option>
<option value="176">Papua New Guinea</option>
<option value="186">Paraguay</option>
<option value="174">Peru</option>
<option value="177">Philippines</option>
<option value="179">Poland</option>
<option value="184">Portugal</option>
<option value="182">Puerto Rico</option>
<option value="187">Qatar</option>
<option value="42">Republic of the Congo</option>
<option value="189">Romania</option>
<option value="191">Russia</option>
<option value="192">Rwanda</option>
<option value="204">San Marino</option>
<option value="193">Saudi Arabia</option>
<option value="205">Senegal</option>
<option value="190">Serbia</option>
<option value="195">Seychelles</option>
<option value="203">Sierra Leone</option>
<option value="198">Singapore</option>
<option value="202">Slovakia</option>
<option value="200">Slovenia</option>
<option value="194">Solomon Islands</option>
<option value="206">Somalia</option>
<option value="248">South Africa</option>
<option value="122">South Korea</option>
<option value="208">South Sudan</option>
<option value="68">Spain</option>
<option value="130">Sri Lanka</option>
<option value="196">Sudan</option>
<option value="207">Suriname</option>
<option value="213">Swaziland</option>
<option value="197">Sweden</option>
<option value="43">Switzerland</option>
<option value="212">Syria</option>
<option value="228">Taiwan</option>
<option value="219">Tajikistan</option>
<option value="229">Tanzania</option>
<option value="218">Thailand</option>
<option value="217">Togo</option>
<option value="224">Tonga</option>
<option value="226">Trinidad and Tobago</option>
<option value="223">Tunisia</option>
<option value="225">Turkey</option>
<option value="222">Turkmenistan</option>
<option value="240">U.S. Virgin Islands</option>
<option value="231">Uganda</option>
<option value="230">Ukraine</option>
<option value="2">United Arab Emirates</option>
<option value="77">United Kingdom</option>
<option value="233">United States</option>
<option value="234">Uruguay</option>
<option value="235">Uzbekistan</option>
<option value="238">Venezuela</option>
<option value="241">Vietnam</option>
<option value="246">Yemen</option>
<option value="249">Zambia</option>
<option value="250">Zimbabwe</option>
</select>
                                            
                                            <input data-bind="value:countryId" data-val="true" data-val-number="The field DestinationCountry must be a number." data-val-required="Feltet DestinationCountry skal udfyldes." id="DestinationCountry" name="DestinationCountry" type="hidden" value="59">
                                            <br>
                                        </p>
                                        <p class="">
                                            Destination ZIP code (and state if relevant)<span class="input-required">*</span><br>
                                            <input class="input-lg address valid" data-bind="value:postal" id="ZipCode" name="ZipCode" placeholder="Enter destination ZIP code" type="text" value="">
                                        </p>
                                        <p class="">
                                            Destination city<span class="input-required">*</span><br>
                                            <input class="input-lg address valid" data-bind="value:city" id="DestinationCity" name="DestinationCity" placeholder="Enter destination city" type="text" value="">
                                        </p>
                                        <p>
                                            State (optional)<br>
                                            <input class="input-lg address valid" data-bind="value:state" id="DestinationState" name="DestinationState" placeholder="Enter destination state" type="text" value="">
                                        </p>

                                        <p>
                                            Destination address<span class="input-required">*</span><br>
                                            <input class="input-lg address" data-bind="value:address" id="DestinationAddress" name="DestinationAddress" placeholder="Enter destination address" type="text" value="">
                                        </p>
                                        <input id="btn-proceed-12" type="button" class="btn btn-primary btn-lg" value="Proceed »" data-bind="click: goToStepTwo">
                                    </div>
                                </div>
                            </div>

                            <div id="sendaletter-step2" data-bind="visible: showStepTwo()">
                                <p class="frontpageLeadExplanation">@ViewRes.StepTwo</p>
                                <p class="caption frontpageCaption" style="margin-top: -10px; margin-bottom: 14px;">(@ViewRes.WePromiseWeDontLook)</p>

                                <div id="step2-choice" style="margin-bottom: 11px; overflow: auto;" data-bind="visible: uploadPdf() == 0">
                                    <a id="lnkUploadPdf" data-bind="click: useUploadPdfMode" style="float: left;">
                                        <span class="btn btn-primary btn-lg" style="margin-bottom: 5px;">@ViewRes.UploadPDFFile</span>
                                    </a>
                                    <span style="float: left; padding: 10px;">Or</span>
                                    <a id="lnkWriteText" data-bind="click: useWriteContentMode" style="float: left;">
                                        <span class="btn btn-primary btn-lg">@ViewRes.WriteLetterHere</span>
                                    </a>
                                </div>
                                <div id="step2-upload" class="promotionMargin" style="margin-top: 25px;" data-bind="visible: isUploadFile()">
                                    <p class="frontpageLeadExplanation">@ViewRes.UploadYourPDFFile:</p>
                                    <div id="myDropzone" class="la-dropzone">
                                        <div class="dz-default dz-message">
                                            <span>
                                                @Html.Raw(ViewRes.UploadHint)
                                            </span>
                                        </div>
                                    </div>
                                    <label data-bind="visible: showMissingUpload" class="error">Please upload your letter!</label>
                                    <div id="uploadFallbackPanel" style="display: none;">
                                        <input id="fileUpload" name="fileUpload" type="file" />
                                    </div>
                                    <br />
                                    <br />
                                    <a id="uploadLetterBack" class="btn btn-default" data-bind="click: resetContentMode">@ViewRes.Back</a>
                                </div>
                                <div id="step2-write" class="promotionMargin" style="margin-top: 25px;" data-bind="visible: isWriteContent()">
                                    <p class="frontpageLeadExplanation">@ViewRes.WriteYourLetter:</p>
                                    @Html.TextAreaFor(m => m.WriteContent)
                                    <label data-bind="visible: showMissingWriteContent" class="error">Please write your letter!</label>
                                    <label id="currentChars"></label>
                                    <a class="pdfPreviewLnk" href="#" data-bind="click: previewWrittenContent">@ViewRes.SeePreviewHowLetterLook</a>
                                    <br />
                                    <br />
                                    <a id="writeLetterBack" class="btn btn-default" data-bind="click: resetContentMode">@ViewRes.Back</a>
                                </div>

                                <input id="btn-back-21" type="button" class="btn btn-default" value="Back" data-bind="click: goToStepOne, visible: uploadPdf() == 0" />
                                <input id="btn-proceed-23" type="button" class="btn btn-primary btn-lg" value="@ViewRes.Proceed &raquo;" data-bind="click: goToStepThree, visible: showStepTwoAction()" />
                            </div>

                            <div id="sendaletter-step3" data-bind="visible: showStepThree()">
                                <p class="frontpageLeadExplanation">@ViewRes.StepThree</p>
                                <p class="frontpageSmallLeadExplanation">Sending letters are not free, and when we send letters without stamps, the postal offices get really angry at us. <b>So we better get the letter stamped</b>.</p>
                                <hr />

                                <p data-bind="visible: uploadPdf() == 1">
                                    <b>@ViewRes.Remember:</b> <a class="pdfPreviewLnk" href="#" data-bind="click: previewPDF">@ViewRes.SeePreviewHowLetterLook</a>
                                </p>
                                <p data-bind="visible: uploadPdf() == 2">
                                    <b>@ViewRes.Remember:</b> <a class="pdfPreviewLnk" href="#" data-bind="click: previewWrittenContent">@ViewRes.SeePreviewHowLetterLook</a>
                                </p>

                                <div class="row letterDestination">
                                    <div class="col-lg-6">
                                        <dl>
                                            <dt>@ViewRes.PaymentMethod</dt>
                                            <dd>PayPal</dd>

                                            <dt>@ViewRes.ShippingTime</dt>
                                            <dd>3-6 work days</dd>

                                            <dt>@ViewRes.Price</dt>
                                            <dd>
                                                <label id="priceOfLetterLbl" data-bind="text: getPriceExVat"></label> EUR

                                                <text>(<label id="priceOfLetterLbl" data-bind="text: getPriceTotal"></label> EUR inc. local VAT)</text>


                                            </dd>
                                        </dl>
                                    </div>
                                    <div class="col-lg-6 ">
                                        <dl>
                                            <dt>@ViewRes.LetterDestination</dt>
                                            <dd>
                                                @ViewRes.To
                                                <label id="receiverLbl" data-bind="text: receiver"></label>
                                                <br />
                                                <label id="addressLbl" data-bind="text: address"></label>
                                                <br />
                                                <label id="postalLbl" data-bind="text: postal"></label>
                                                <label id="cityLbl" data-bind="text: city"></label>
                                                <br />
                                                <label id="countryLbl" data-bind="text: country"></label>
                                            </dd>
                                        </dl>
                                    </div>
                                </div>

                                @*@Html.CheckBoxFor(m => m.SignUpNewsletter)
                                @ViewRes.FollowOurExcitingJourneyThroughEmail*@
                                <br />
                                <br />

                                <input id="btn-back-32" type="button" class="btn btn-default" value="@ViewRes.Back" data-bind="click: goToStepTwo" />


                                <label data-bind="text: priceStatusMessage, visible: !canSendLetter()"></label>
                                <input id="btnsubmit" type="submit" class="btn btn-primary btn-lg submitAbe" value="@ViewRes.StampAndSendLetter &raquo;" data-bind="visible: canSendLetter(), click: save" />
                                
                                @Html.HiddenFor(m => m.UseUploadFile, new Dictionary<string, object> { { "data-bind", "value:useUploadFile" } })
                                @Html.HiddenFor(m => m.UploadFile, new Dictionary<string, object> { { "data-bind", "value:uploadFileKey" } })
                                <br />
                                <br />
                              
                            </div>

                        </div>
                    </div>
                    <div class="col-lg-5">
                        <div id="locationMap" style="margin-top: 15px;" data-bind="visible: showMap()">
                            <div class="google-map-canvas" data-bind="visible: initMap()">
                                <div id="mapsDiv">
                                    <div id="map-canvas" style="width: 457px; height: 500px; border: 1px solid #d9d9d9; border-radius: 10px;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                
                @Html.HiddenFor(model=>model.PaymentMethodId)
                @Html.HiddenFor(model=>model.LetterType)
            }
        </div>
    </div>
</div>

<br/><br/>
@Html.Partial("_sendLettersToOverview",Model.CountryPriceList)
<script type="text/javascript">
    var createLetterData = {
        countryList: countryList,
        currentFile: null,
        generatePDFUrl: '@Url.Action("GeneratePDF")',
        getPriceUrl: '@Url.Action("GetPrice")',
        previewPDFUrl: '@Url.Action("PreviewPDF")',
        geocoder: new google.maps.Geocoder(),
        isAutheticated: false
    };

    CKEDITOR.replace('WriteContent');
    createLetterData.writeContentEditor = CKEDITOR.instances.WriteContent;

    var viewModel = new SendALetterViewModel('#sendALetterForm', createLetterData);
    ko.applyBindings(viewModel, document.getElementById('sendALetterForm'));

    $('div#myDropzone').dropzone({
        url: '@Url.Action("Upload")',
        acceptedFiles: 'application/pdf',
        maxFilesize: 10,
        addRemoveLinks: true,
        dictRemoveFile: 'Remove file',
        fallback: function () {
            $('div#myDropzone').hide();
            $('div#uploadFallbackPanel').show();
        },
        success: function (file, data) {
            var template = file.previewTemplate;
            if (data.status == "success") {
                if (createLetterData.currentFile != null) $(createLetterData.currentFile.previewTemplate).remove();
                createLetterData.currentFile = file;
                $(template).find('.dz-progress').hide();
                $(template).find('.dz-details img').attr({
                    'src': '@Url.Content("~/Content/images/icons/pdf-icon.png")',
                    'height': '100',
                    'style': 'margin-top: 28px; margin-left: 20px; height: 65px; width: 65px; display: block;'
                });
                viewModel.uploadFileKey(data.key);
            } else {
                $(template).find('.dz-error-message').remove();
                $(template).addClass('dz-error');
                $(template).find('.dz-error-mark').on('click', function () {
                    $(template).remove();
                });
                viewModel.uploadFileKey('');
            }
        },
        error: function (file, responseText) {
            var template = file.previewTemplate;
            $(template).remove();
            viewModel.uploadFileKey('');
        },
        removedfile: function (file) {
            var template = file.previewTemplate;
            $(template).remove();
            viewModel.uploadFileKey('');
        }
    });

    $('#fileUpload').uploadify({
        'buttonText': 'Select PDF',
        'fileTypeDesc': 'PDF Files',
        'fileTypeExts': '*.pdf',
        'fileObjName': 'uploadFile',
        'removeCompleted': false,
        'multi': false,
        'swf': '@Url.Content("~/Scripts/uploadify/uploadify.swf")',
        'uploader': '@Url.Action("Upload")',
        'onUploadSuccess': function (file, data, response) {
            console.info("data: ", data);
            var result = $.parseJSON(data);
            if (result.status == "success") {
                viewModel.uploadFileKey(result.key);
            }
        },
        'onUploadError': function (ex, e, er) {
            console.log(er);
        }
    });
</script>
