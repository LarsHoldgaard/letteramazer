@model LetterAmazer.Websites.Client.ViewModels.User.SendWindowedLetterViewModel

@section header {
    <link href="@Url.Content("~/Scripts/uploadify/uploadify.css")" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/uploadify/jquery.uploadify.min.js")"></script>

    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Scripts/dropzone/css/dropzone.css")" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/dropzone/dropzone.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/knockout-3.0.0.js")"></script>

<script type="text/javascript" src="@Url.Content("~/Scripts/internals/windowedletter-viewmodel.js")"></script>
}

<h1>Send a windowed envelope</h1>

@using (Html.BeginForm("SendWindowedLetter", "User", FormMethod.Post, new { id = "sendLetterForm" }))
{



    <h2>What country are you sending this letter to?</h2>

    @Html.DropDownListFor(model => model.SelectedCountry, Model.Countries, new { @class = "form-control" })


    <h2>Upload your file</h2>
    <div id="myDropzone" class="la-dropzone">
        <div class="dz-default dz-message">
            <span>
                Upload the PDF file you want to send
            </span>
        </div>
    </div>
    @Html.HiddenFor(m => m.UploadFile, new Dictionary<string, object> { { "data-bind", "value:uploadFileKey" } })

    <button id="saveFile" class="btn">Store file</button>

    <h2>Send this letter</h2>
    <dl>
        <dt>Payment method</dt>
        <dd>Credits</dd>
        <dt>Price</dt>
        <dd data-bind="text: price"></dd>
        <dt>Shipping time</dt>
        <dd data-bind="text: shippingtime"></dd>
    </dl>

    <input type="submit" value="Send letter" class="btn btn-success btn-lg"/>
}

<script>

    var createLetterData = {

    };

    var viewModel = new SendWindowedLetterViewModel('#sendLetterForm', createLetterData);
    ko.applyBindings(viewModel, document.getElementById('sendLetterForm'));

    $(document).ready(function () {
        $('#saveFile').click(function () {

        });
    });

    $('div#myDropzone').dropzone({
        url: '@Url.Action("Upload", "SingleLetter")',
        acceptedFiles: 'application/pdf',
        maxFilesize: 10,
        addRemoveLinks: true,
        dictRemoveFile: 'Remove file',
        fallback: function () {
            $('div#myDropzone').hide();
            $('div#uploadFallbackPanel').show();
        },
        success: function (file, data) {
            var template = file.previewTemplate;
            if (data.status == "success") {
                if (createLetterData.currentFile != null) $(createLetterData.currentFile.previewTemplate).remove();
                createLetterData.currentFile = file;
                $(template).find('.dz-progress').hide();
                $(template).find('.dz-details img').attr({
                    'src': '@Url.Content("~/Content/images/pdf-icon.png")',
                    'height': '100',
                    'style': 'margin-top: 28px; margin-left: 20px; height: 65px; width: 65px; display: block;'
                });
                viewModel.uploadFileKey(data.key);
            } else {
                $(template).find('.dz-error-message').remove();
                $(template).addClass('dz-error');
                $(template).find('.dz-error-mark').on('click', function () {
                    $(template).remove();
                });
                viewModel.uploadFileKey('');
            }
        },
        error: function (file, responseText) {
            var template = file.previewTemplate;
            $(template).remove();
            viewModel.uploadFileKey('');
        },
        removedfile: function (file) {
            var template = file.previewTemplate;
            $(template).remove();
            viewModel.uploadFileKey('');
        }
    });

    $('#fileUpload').uploadify({
        'buttonText': 'Select PDF',
        'fileTypeDesc': 'PDF Files',
        'fileTypeExts': '*.pdf',
        'fileObjName': 'uploadFile',
        'removeCompleted': false,
        'multi': false,
        'swf': '@Url.Content("~/Scripts/uploadify/uploadify.swf")',
        'uploader': '@Url.Action("Upload", "SingleLetter")',
        'onUploadSuccess': function (file, data, response) {
            console.info("data: ", data);
            var result = $.parseJSON(data);
            if (result.status == "success") {
                console.log('We are setting the viewmodel: ' + viewModel);
                viewModel.uploadFileKey(result.key);
            }
        },
        'onUploadError': function (ex, e, er) {
            console.log(er);
        }
    });
</script>
