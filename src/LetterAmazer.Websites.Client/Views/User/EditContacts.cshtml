@model LetterAmazer.Websites.Client.ViewModels.User.EditContactsViewModel

<h1>Edit contacts</h1>

<p>Here you can edit the senders adresses, you can pick when sending a letter. For instance, if you have two seperate departments in your organisation, you can add both for future use.</p>


<h3>Existing contacts</h3>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Address
            </th>
            <th>
                Edit
            </th>
        </tr>
    </thead>
    @foreach (var item in Model.Contacts)
    {
        <tr>
            <td>@item.OrganisationName</td>
            <td>@item.Address1 @item.Address2 @item.ZipCode @item.City</td>
            <td><a href="/user/EditSingleContact?organisationContactId=@item.AddressListId">Edit</a></td>
        </tr>
    }
</table>

<h3>New contact</h3>

@if (!string.IsNullOrEmpty(ViewBag.status))
{
    <div class="alert alert-success">
        @ViewBag.status
    </div>
}


@using (Html.BeginForm("EditContacts", "User", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-6">
            <label class="form-label" for="Address1">Address</label><br />
            @Html.TextBoxFor(model => model.NewContact.Address1, new { @class = "form-control", placeholder = "Address 1" })
            <br />
            <label class="form-label" for="Address2">Address 2</label><br />
            @Html.TextBoxFor(model => model.NewContact.Address2, new { @class = "form-control", placeholder = "Address 2" })
            <br />
            <label class="form-label" for="ZipCode">Zip code</label><br />
            @Html.TextBoxFor(model => model.NewContact.ZipCode, new { @class = "form-control", placeholder = "Zip code" })
            <br />
            <label class="form-label" for="City">City</label><br />
            @Html.TextBoxFor(model => model.NewContact.City, new { @class = "form-control", placeholder = "City" })
            <br />
            <label class="form-label" for="State">State</label><br />
            @Html.TextBoxFor(model => model.NewContact.State, new { @class = "form-control", placeholder = "State" })
            <br />
            <label class="form-label" for="Address1">Country</label><br />
            @Html.DropDownListFor(model => model.NewContact.SelectedCountry, Model.NewContact.Countries, new { @class = "form-control" })
            <br />
            <label class="form-label" for="OrganisationName">Name of address</label><br />
            @Html.TextBoxFor(model => model.NewContact.OrganisationName, new { @class = "form-control", placeholder = "Name" })

            <br /><br />
            <input type="submit" id="EditContactsBtn" class="btn btn-lg btn-success" value="Add new contact" />

            @Html.HiddenFor(model => model.OrganisationId)

        </div>
    </div>
}