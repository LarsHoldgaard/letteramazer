@using LetterAmazer.Business.Services.Domain.Letters
@using LetterAmazer.Business.Utils.Helpers
@using LetterAmazer.Websites.Client.Extensions
@using LetterAmazer.Websites.Client.Resources.Views.User

@model LetterAmazer.Websites.Client.ViewModels.ProfileViewModel

@section header {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/themes/base/jquery-ui.css")" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui-1.10.3.min.js")"></script>
}

@if (!SessionHelper.Customer.IsActivated)
{
    @Html.Partial("_notActivated")
}


<h1>Overview</h1>


<h2>Actions</h2>

@if (Model.Customer.CreditsLeft > 0)
{
    <p><a class="btn btn-success btn-lg" href="@Url.Action("SendALetter")">Send a letter</a></p>
}
else
{
    <p>To send letters, you need to purchase credits.</p>
    <p><a href="#" class="btn-success btn btn-lg" disabled="disabled">Send a letter</a></p>
}

<a class="btn btn-primary btn-lg" href="@Url.Action("Credits")">Buy credits</a>

<h2>Account status</h2>
Credits available: @Model.Customer.Credit.ToFriendlyMoney() $ 
@if (SessionHelper.Customer.CreditLimit != 0)
{
    <p>Your account has a limit of @SessionHelper.Customer.CreditLimit.</p>
}

@if (Model.Orders != null && Model.Orders.Any())
{
    <h2>@ViewRes.OrderOverview</h2>
<form class="form-inline" role="form" method="get" action="@Url.Action("Index")">
    <div class="form-group">
        <label class="sr-only" for="fromDate">From</label>
        <input type="text" class="form-control" id="fromDate" placeholder="From" name="fromDate" value="@(Model.FromDate.HasValue ? Model.FromDate.Value.ToString("yyyy-MM-dd") : "")" />
    </div>
    <div class="form-group">
        <label class="sr-only" for="toDate">To</label>
        <input type="text" class="form-control" id="toDate" placeholder="To" name="toDate" value="@(Model.ToDate.HasValue ? Model.ToDate.Value.ToString("yyyy-MM-dd") : "")" />
    </div>
    <button type="submit" class="btn btn-success">@ViewRes.Search</button>
</form>
<table class="table table-striped">
    <thead>
        <tr>
            <td>@ViewRes.Order#</td>
            <td>@ViewRes.Date</td>
            <td>@ViewRes.OrderState</td>
            <td>@ViewRes.LetterCount</td>
            <td>@ViewRes.Price</td>
            <td>@ViewRes.Details</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Orders)
        {

            <tr>
                <td>@item.Id</td>
                <td>@item.DateCreated.ToFriendlyDateTime()</td>
                <td>@ViewRes.ResourceManager.GetString(item.OrderStatus.ToString())</td>
                <td>@item.OrderLines.Count</td>
                <td>@item.Price.ToFriendlyMoney() USD</td>
                <td><a href="@Url.Action("Details", new { id = item.Id })">See details</a></td>

            </tr>
        }
    </tbody>
</table>

}



<script type="text/javascript">
    $(function () {
        $('#fromDate').datepicker({
            dateFormat: 'yy-mm-dd'
        });
        $('#toDate').datepicker({
            dateFormat: 'yy-mm-dd'
        })
    });
</script>
