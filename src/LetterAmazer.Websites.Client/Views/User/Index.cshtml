@using LetterAmazer.Business.Utils.Helpers
@using LetterAmazer.Websites.Client.Extensions

@model LetterAmazer.Websites.Client.ViewModels.DashboardViewModel

@section header {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/themes/base/jquery-ui.css")" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui-1.10.3.min.js")"></script>
}

@if (!SessionHelper.Customer.IsActivated)
{
    @Html.Partial("_notActivated")
}

<h1>LetterAmazer dashboard</h1>


<h2>Insert more money</h2>
<a class="btn btn-primary btn-lg" href="@Url.Action("Credits")">Insert money</a>


<h2>Actions</h2>
@if (Model.Customer.CreditsLeft > 0)
{
    @*if (Model.LetterType == LetterType.Pres)
    {
        <p><a class="btn btn-success btn-lg" href="@Url.Action("SendALetter")">Send a letter</a></p>
    }
    else
    {*@
        <p><a href="@Url.Action("SendWindowedLetter")" class="btn-success btn btn-lg">Send a windowed letter</a></p>
    //}
}
else
{
    <p><b>No money left</b>. Insert more money to send a letter.</p>
    <p><a href="#" class="btn-default btn btn-lg" disabled="disabled">Send a letter</a></p>
}

<h2>Account status</h2>
Money available: <b>@Model.Customer.Credit.ToFriendlyMoney() EUR</b>
@if (SessionHelper.Customer.CreditLimit != 0)
{
    <p>Your account has a limit of @SessionHelper.Customer.CreditLimit EUR</p>
}


@if (Model.UnpaidInvoices != null && Model.UnpaidInvoices.InvoiceSnippets.Any())
{
<h2>Pending unpaid invoices</h2>
@Html.Partial("_invoiceOverview", Model.UnpaidInvoices)
@Html.ActionLink("See all your invoices", "InvoiceOverview", "User", null, new { @class = "btn-primary btn" })    
}



@if (Model.Orders != null && Model.Orders.Any())
{
    <h2>Overview of orders</h2>
    
    <table class="table table-striped">
        <thead>
            <tr>
                <td>Order#</td>
                <td>Date</td>
                <td>Order state</td>
                <td>Letter count</td>
                <td>Price </td>
                <td>See details </td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Orders)
            {

                <tr>
                    <td>@item.Id</td>
                    <td>@item.DateCreated.ToFriendlyDateTime()</td>
                    <td>@item.OrderStatus.ToString()</td>
                    <td>@item.OrderLines.Count</td>
                    <td>@item.Price.ToFriendlyMoney() USD</td>
                    <td><a href="@Url.Action("Details", new { id = item.Id })">See details</a></td>

                </tr>
            }
        </tbody>
    </table>

}



<script type="text/javascript">
    $(function () {
        $('#fromDate').datepicker({
            dateFormat: 'yy-mm-dd'
        });
        $('#toDate').datepicker({
            dateFormat: 'yy-mm-dd'
        });
    });
</script>
