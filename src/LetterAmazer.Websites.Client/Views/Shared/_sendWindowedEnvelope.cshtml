@using LetterAmazer.Business.Utils.Helpers
@model LetterAmazer.Websites.Client.ViewModels.User.SendWindowedLetterViewModel

@using (Html.BeginForm("SendWindowedLetter", "SingleLetter", FormMethod.Post, new { id = "sendLetterForm" }))
{
    <h2>1. Upload your file</h2>
    <p>You can upload one or multiple PDF files below.</p>
    <p><b>Make sure the recepient address is positioned correct</b>. Upload a single PDF document and see the preview below to verify its position.</p>
    <div style="max-width: 700px">
        <div id="myDropzone" class="la-dropzone">
            <div class="dz-default dz-message">
                <span>
                    Drag your PDF files here, or click here to select one from your computer
                </span>
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.UploadFile, new Dictionary<string, object> { { "data-bind", "value:uploadFileKey()" } })


    <h2>2. What country should we send the letter to?</h2>
    <p>Select the country we should send this letter to:</p>
    <div style="max-width: 700px">

        @Html.DropDownListFor(model => model.SelectedCountry, Model.Countries, new Dictionary<string, object> { { "class", "form-control sendaletter_countrylist" }, { "data-bind", "value:countryId" } })
        @Html.HiddenFor(m => m.DestinationCountryId, new Dictionary<string, object> { { "data-bind", "value:countryId" } })

    </div>
    <div data-bind="visible: getUploadStatus() == 'failure' && uploadFileKey().length > 0" class="alert alert-error" style="margin-top: 10px;">
        <h2>This PDF file cannot be sent</h2>
        <p>
            Please make sure the following requirements are met:
        </p>
        <ul>
            <li>The PDF file is below 25mb</li>
            <li>The PDF file contains 7 pages or less</li>
            <li>The PDF file are being sent to Denmark</li>
        </ul>
    </div>

    <div data-bind="visible: getPriceExVat() <= 0.0">
        <h2>3. Send this letter</h2>

        <div class="alert alert-warning">

            <p>Please upload a letter, before you can send it.</p>
        </div>
    </div>

    <div data-bind="visible: getUploadStatus() == 'success'">

        <h2>3. Send this letter</h2>

        @if (!Model.IsLoggedIn)
        {
            <p>
                Enter your e-mail:<br />
                @Html.TextBoxFor(model => model.Email)
            </p>

            <p>
                Where are you from?<br />
                @Html.DropDownListFor(model => model.SelectedOriginCountry, Model.Countries, new Dictionary<string, object> { { "class", "form-control sendaletter_countrylist" }, { "data-bind", "value:originCountryId" } })
                @Html.HiddenFor(m => m.SelectedOriginCountry, new Dictionary<string, object> { { "data-bind", "value:originCountryId" } })
            </p>

        }

        <div class="row">
            <div class="col-md-3">
                <dl>
                    <dt>Payment method</dt>
                    <dd>Credits</dd>
                    <dt>Price</dt>
                    <dd>

                        <label id="priceOfLetterLbl" data-bind="text: getPriceExVat"></label> EUR

                        @if (SessionHelper.Customer != null && SessionHelper.Customer.VatPercentage() > 0.0m)
                        {
                            <text>(<label id="priceOfLetterLbl" data-bind="text: getPriceTotal"></label> EUR inc. local VAT)</text>
                        }
                    </dd>
                    <dt data-bind="visible: uploadFileKey().length == 1">Pages</dt>
                    <dd data-bind="text: numberOfPages, visible: uploadFileKey().length == 1"></dd>
                    <dt>Shipping time</dt>
                    <dd>1-3 Week days</dd>
                </dl>
                <input type="submit" value="Send letter" class="btn btn-success btn-lg" />
            </div>
            <div class="col-md-9" data-bind="visible: uploadFileKey().length == 1">
                <br /><b>Your letter</b><br />
                The grey box is where the address has to be:

                <div style="border:1px solid #d9d9d9; max-width: 700px;">
                    <img data-bind="attr:{src: thumbnailImagePath}" style="width:100%;" />
                </div>

            </div>
        </div>



    </div>

    @Html.HiddenFor(model => model.PaymentMethodId)
    @Html.HiddenFor(model => model.LetterType)
    @Html.HiddenFor(model => model.UseUploadFile)
}

<script>


    var createLetterData = {
        getPriceUrl: '@Url.Action("GetPrice", "SingleLetter")',
        thumbnailUrl: '@Url.Action("GetThumbnail", "SingleLetter")',
    };

    var viewModel = new SendWindowedLetterViewModel('#sendLetterForm', createLetterData);
    ko.applyBindings(viewModel, document.getElementById('sendLetterForm'));

    // this line is used to remove multiple uploaded files, if we only want to allow single
    // if (createLetterData.currentFile != null) $(createLetterData.currentFile.previewTemplate).remove();

    $('div#myDropzone').dropzone({
        url: '@Url.Action("Upload", "SingleLetter")',
        acceptedFiles: 'application/pdf',
        maxFilesize: 100,
        addRemoveLinks: true,
        dictRemoveFile: 'Remove file',
        fallback: function () {
            $('div#myDropzone').hide();
            $('div#uploadFallbackPanel').show();
        },
        success: function (file, data) {
            console.log('Send windowed envelope success call');
            var template = file.previewTemplate;
            if (data.status == "success") {

                createLetterData.currentFile = file;
                $(template).find('.dz-progress').hide();
                $(template).find('.dz-details img').attr({
                    'src': '@Url.Content("~/Content/images/icons/pdf-icon.png")',
                    'height': '100',
                    'style': 'margin-top: 28px; margin-left: 20px; height: 65px; width: 65px; display: block;'
                });
                viewModel.uploadFileKey.push(data.key);
                viewModel.downloadPrices();

            } else {
                $(template).find('.dz-error-message').remove();
                $(template).addClass('dz-error');
                $(template).find('.dz-error-mark').on('click', function () {
                    $(template).remove();
                });
                viewModel.uploadFileKey('');
            }
        },
        error: function (file, responseText) {
            console.log('Send windowed envelope error call');
            var template = file.previewTemplate;
            $(template).remove();
            viewModel.uploadFileKey.remove(file);
        },
        removedfile: function (file) {
            var template = file.previewTemplate;
            $(template).remove();
            viewModel.uploadFileKey.remove(file);

            // TODO: why?
            viewModel.downloadPrices();
        }
    });

    $('#fileUpload').uploadify({
        'buttonText': 'Select PDF',
        'fileTypeDesc': 'PDF Files',
        'fileTypeExts': '*.pdf',
        'fileObjName': 'uploadFile',
        'removeCompleted': false,
        'multi': true,
        'swf': '@Url.Content("~/Scripts/uploadify/uploadify.swf")',
        'uploader': '@Url.Action("Upload", "SingleLetter")',
        'onUploadSuccess': function (file, data, response) {
            var result = $.parseJSON(data);
            if (result.status == "success") {
                viewModel.uploadFileKey.push(result.key);
            }

        },
        'onUploadError': function (ex, e, er) {
            console.log(er);
        }
    });


    $(document).ready(function () {
        $('#SelectedCountry').change(function () {
            viewModel.downloadPrices();
        });

    });
</script>
