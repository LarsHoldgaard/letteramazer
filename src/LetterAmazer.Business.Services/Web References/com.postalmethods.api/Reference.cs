//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace LetterAmazer.Business.Services.com.postalmethods.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PostalWSSoap", Namespace="PostalMethods")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeneralDetails))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetGeneralDetailsResult))]
    public partial class PostalWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLetterAndAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPostcardAndAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendWordMailMerge_CompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUploadedFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUploadedFileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailsExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchDetailsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PostalWS() {
            this.Url = global::LetterAmazer.Business.Services.Properties.Settings.Default.LetterAmazer_Business_Services_com_postalmethods_api_PostalWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendLetterCompletedEventHandler SendLetterCompleted;
        
        /// <remarks/>
        public event SendLetterAndAddressCompletedEventHandler SendLetterAndAddressCompleted;
        
        /// <remarks/>
        public event SendPostcardAndAddressCompletedEventHandler SendPostcardAndAddressCompleted;
        
        /// <remarks/>
        public event SendWordMailMerge_CompressedCompletedEventHandler SendWordMailMerge_CompressedCompleted;
        
        /// <remarks/>
        public event GetPDFCompletedEventHandler GetPDFCompleted;
        
        /// <remarks/>
        public event CancelDeliveryCompletedEventHandler CancelDeliveryCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event DeleteUploadedFileCompletedEventHandler DeleteUploadedFileCompleted;
        
        /// <remarks/>
        public event GetUploadedFileDetailsCompletedEventHandler GetUploadedFileDetailsCompleted;
        
        /// <remarks/>
        public event GetDetailsCompletedEventHandler GetDetailsCompleted;
        
        /// <remarks/>
        public event GetDetailsExtendedCompletedEventHandler GetDetailsExtendedCompleted;
        
        /// <remarks/>
        public event GetStatusCompletedEventHandler GetStatusCompleted;
        
        /// <remarks/>
        public event GetBatchStatusCompletedEventHandler GetBatchStatusCompleted;
        
        /// <remarks/>
        public event GetBatchDetailsCompletedEventHandler GetBatchDetailsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/SendLetter", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendLetter(string Username, string Password, string MyDescription, string FileExtension, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileBinaryData, WorkMode WorkMode) {
            object[] results = this.Invoke("SendLetter", new object[] {
                        Username,
                        Password,
                        MyDescription,
                        FileExtension,
                        FileBinaryData,
                        WorkMode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendLetterAsync(string Username, string Password, string MyDescription, string FileExtension, byte[] FileBinaryData, WorkMode WorkMode) {
            this.SendLetterAsync(Username, Password, MyDescription, FileExtension, FileBinaryData, WorkMode, null);
        }
        
        /// <remarks/>
        public void SendLetterAsync(string Username, string Password, string MyDescription, string FileExtension, byte[] FileBinaryData, WorkMode WorkMode, object userState) {
            if ((this.SendLetterOperationCompleted == null)) {
                this.SendLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLetterOperationCompleted);
            }
            this.InvokeAsync("SendLetter", new object[] {
                        Username,
                        Password,
                        MyDescription,
                        FileExtension,
                        FileBinaryData,
                        WorkMode}, this.SendLetterOperationCompleted, userState);
        }
        
        private void OnSendLetterOperationCompleted(object arg) {
            if ((this.SendLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLetterCompleted(this, new SendLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/SendLetterAndAddress", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendLetterAndAddress(string Username, string Password, string MyDescription, string FileExtension, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileBinaryData, WorkMode WorkMode, string AttentionLine1, string AttentionLine2, string Company, string Address1, string Address2, string City, string State, string PostalCode, string Country) {
            object[] results = this.Invoke("SendLetterAndAddress", new object[] {
                        Username,
                        Password,
                        MyDescription,
                        FileExtension,
                        FileBinaryData,
                        WorkMode,
                        AttentionLine1,
                        AttentionLine2,
                        Company,
                        Address1,
                        Address2,
                        City,
                        State,
                        PostalCode,
                        Country});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendLetterAndAddressAsync(string Username, string Password, string MyDescription, string FileExtension, byte[] FileBinaryData, WorkMode WorkMode, string AttentionLine1, string AttentionLine2, string Company, string Address1, string Address2, string City, string State, string PostalCode, string Country) {
            this.SendLetterAndAddressAsync(Username, Password, MyDescription, FileExtension, FileBinaryData, WorkMode, AttentionLine1, AttentionLine2, Company, Address1, Address2, City, State, PostalCode, Country, null);
        }
        
        /// <remarks/>
        public void SendLetterAndAddressAsync(
                    string Username, 
                    string Password, 
                    string MyDescription, 
                    string FileExtension, 
                    byte[] FileBinaryData, 
                    WorkMode WorkMode, 
                    string AttentionLine1, 
                    string AttentionLine2, 
                    string Company, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string PostalCode, 
                    string Country, 
                    object userState) {
            if ((this.SendLetterAndAddressOperationCompleted == null)) {
                this.SendLetterAndAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLetterAndAddressOperationCompleted);
            }
            this.InvokeAsync("SendLetterAndAddress", new object[] {
                        Username,
                        Password,
                        MyDescription,
                        FileExtension,
                        FileBinaryData,
                        WorkMode,
                        AttentionLine1,
                        AttentionLine2,
                        Company,
                        Address1,
                        Address2,
                        City,
                        State,
                        PostalCode,
                        Country}, this.SendLetterAndAddressOperationCompleted, userState);
        }
        
        private void OnSendLetterAndAddressOperationCompleted(object arg) {
            if ((this.SendLetterAndAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLetterAndAddressCompleted(this, new SendLetterAndAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/SendPostcardAndAddress", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendPostcardAndAddress(
                    string Username, 
                    string Password, 
                    string MyDescription, 
                    string ImageSideFileType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImageSideBinaryData, 
                    ImageSideScaling ImageSideScaling, 
                    string AddressSideFileType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] AddressSideBinaryData, 
                    WorkMode WorkMode, 
                    PrintColor PrintColor, 
                    PostcardSize PostcardSize, 
                    MailingPriority MailingPriority, 
                    string AttentionLine1, 
                    string AttentionLine2, 
                    string Company, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string PostalCode, 
                    string Country) {
            object[] results = this.Invoke("SendPostcardAndAddress", new object[] {
                        Username,
                        Password,
                        MyDescription,
                        ImageSideFileType,
                        ImageSideBinaryData,
                        ImageSideScaling,
                        AddressSideFileType,
                        AddressSideBinaryData,
                        WorkMode,
                        PrintColor,
                        PostcardSize,
                        MailingPriority,
                        AttentionLine1,
                        AttentionLine2,
                        Company,
                        Address1,
                        Address2,
                        City,
                        State,
                        PostalCode,
                        Country});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendPostcardAndAddressAsync(
                    string Username, 
                    string Password, 
                    string MyDescription, 
                    string ImageSideFileType, 
                    byte[] ImageSideBinaryData, 
                    ImageSideScaling ImageSideScaling, 
                    string AddressSideFileType, 
                    byte[] AddressSideBinaryData, 
                    WorkMode WorkMode, 
                    PrintColor PrintColor, 
                    PostcardSize PostcardSize, 
                    MailingPriority MailingPriority, 
                    string AttentionLine1, 
                    string AttentionLine2, 
                    string Company, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string PostalCode, 
                    string Country) {
            this.SendPostcardAndAddressAsync(Username, Password, MyDescription, ImageSideFileType, ImageSideBinaryData, ImageSideScaling, AddressSideFileType, AddressSideBinaryData, WorkMode, PrintColor, PostcardSize, MailingPriority, AttentionLine1, AttentionLine2, Company, Address1, Address2, City, State, PostalCode, Country, null);
        }
        
        /// <remarks/>
        public void SendPostcardAndAddressAsync(
                    string Username, 
                    string Password, 
                    string MyDescription, 
                    string ImageSideFileType, 
                    byte[] ImageSideBinaryData, 
                    ImageSideScaling ImageSideScaling, 
                    string AddressSideFileType, 
                    byte[] AddressSideBinaryData, 
                    WorkMode WorkMode, 
                    PrintColor PrintColor, 
                    PostcardSize PostcardSize, 
                    MailingPriority MailingPriority, 
                    string AttentionLine1, 
                    string AttentionLine2, 
                    string Company, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string PostalCode, 
                    string Country, 
                    object userState) {
            if ((this.SendPostcardAndAddressOperationCompleted == null)) {
                this.SendPostcardAndAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPostcardAndAddressOperationCompleted);
            }
            this.InvokeAsync("SendPostcardAndAddress", new object[] {
                        Username,
                        Password,
                        MyDescription,
                        ImageSideFileType,
                        ImageSideBinaryData,
                        ImageSideScaling,
                        AddressSideFileType,
                        AddressSideBinaryData,
                        WorkMode,
                        PrintColor,
                        PostcardSize,
                        MailingPriority,
                        AttentionLine1,
                        AttentionLine2,
                        Company,
                        Address1,
                        Address2,
                        City,
                        State,
                        PostalCode,
                        Country}, this.SendPostcardAndAddressOperationCompleted, userState);
        }
        
        private void OnSendPostcardAndAddressOperationCompleted(object arg) {
            if ((this.SendPostcardAndAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPostcardAndAddressCompleted(this, new SendPostcardAndAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/SendWordMailMerge_Compressed", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SendWordMailMergeResult SendWordMailMerge_Compressed(string Username, string Password, string MyDescription, string FileExtension, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileBinaryData, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] MergeData, WorkMode WorkMode) {
            object[] results = this.Invoke("SendWordMailMerge_Compressed", new object[] {
                        Username,
                        Password,
                        MyDescription,
                        FileExtension,
                        FileBinaryData,
                        MergeData,
                        WorkMode});
            return ((SendWordMailMergeResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendWordMailMerge_CompressedAsync(string Username, string Password, string MyDescription, string FileExtension, byte[] FileBinaryData, byte[] MergeData, WorkMode WorkMode) {
            this.SendWordMailMerge_CompressedAsync(Username, Password, MyDescription, FileExtension, FileBinaryData, MergeData, WorkMode, null);
        }
        
        /// <remarks/>
        public void SendWordMailMerge_CompressedAsync(string Username, string Password, string MyDescription, string FileExtension, byte[] FileBinaryData, byte[] MergeData, WorkMode WorkMode, object userState) {
            if ((this.SendWordMailMerge_CompressedOperationCompleted == null)) {
                this.SendWordMailMerge_CompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendWordMailMerge_CompressedOperationCompleted);
            }
            this.InvokeAsync("SendWordMailMerge_Compressed", new object[] {
                        Username,
                        Password,
                        MyDescription,
                        FileExtension,
                        FileBinaryData,
                        MergeData,
                        WorkMode}, this.SendWordMailMerge_CompressedOperationCompleted, userState);
        }
        
        private void OnSendWordMailMerge_CompressedOperationCompleted(object arg) {
            if ((this.SendWordMailMerge_CompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendWordMailMerge_CompressedCompleted(this, new SendWordMailMerge_CompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/GetPDF", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetPDFResult GetPDF(string Username, string Password, int ID) {
            object[] results = this.Invoke("GetPDF", new object[] {
                        Username,
                        Password,
                        ID});
            return ((GetPDFResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPDFAsync(string Username, string Password, int ID) {
            this.GetPDFAsync(Username, Password, ID, null);
        }
        
        /// <remarks/>
        public void GetPDFAsync(string Username, string Password, int ID, object userState) {
            if ((this.GetPDFOperationCompleted == null)) {
                this.GetPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDFOperationCompleted);
            }
            this.InvokeAsync("GetPDF", new object[] {
                        Username,
                        Password,
                        ID}, this.GetPDFOperationCompleted, userState);
        }
        
        private void OnGetPDFOperationCompleted(object arg) {
            if ((this.GetPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPDFCompleted(this, new GetPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/CancelDelivery", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CancelDelivery(string Username, string Password, int ID) {
            object[] results = this.Invoke("CancelDelivery", new object[] {
                        Username,
                        Password,
                        ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CancelDeliveryAsync(string Username, string Password, int ID) {
            this.CancelDeliveryAsync(Username, Password, ID, null);
        }
        
        /// <remarks/>
        public void CancelDeliveryAsync(string Username, string Password, int ID, object userState) {
            if ((this.CancelDeliveryOperationCompleted == null)) {
                this.CancelDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDeliveryOperationCompleted);
            }
            this.InvokeAsync("CancelDelivery", new object[] {
                        Username,
                        Password,
                        ID}, this.CancelDeliveryOperationCompleted, userState);
        }
        
        private void OnCancelDeliveryOperationCompleted(object arg) {
            if ((this.CancelDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDeliveryCompleted(this, new CancelDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/UploadFile", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadFile(string Username, string Password, string MyFileName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileBinaryData, Permissions Permissions, string Description, bool Overwrite) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        Username,
                        Password,
                        MyFileName,
                        FileBinaryData,
                        Permissions,
                        Description,
                        Overwrite});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(string Username, string Password, string MyFileName, byte[] FileBinaryData, Permissions Permissions, string Description, bool Overwrite) {
            this.UploadFileAsync(Username, Password, MyFileName, FileBinaryData, Permissions, Description, Overwrite, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(string Username, string Password, string MyFileName, byte[] FileBinaryData, Permissions Permissions, string Description, bool Overwrite, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        Username,
                        Password,
                        MyFileName,
                        FileBinaryData,
                        Permissions,
                        Description,
                        Overwrite}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/DeleteUploadedFile", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUploadedFile(string Username, string Password, string MyFileName) {
            object[] results = this.Invoke("DeleteUploadedFile", new object[] {
                        Username,
                        Password,
                        MyFileName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUploadedFileAsync(string Username, string Password, string MyFileName) {
            this.DeleteUploadedFileAsync(Username, Password, MyFileName, null);
        }
        
        /// <remarks/>
        public void DeleteUploadedFileAsync(string Username, string Password, string MyFileName, object userState) {
            if ((this.DeleteUploadedFileOperationCompleted == null)) {
                this.DeleteUploadedFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUploadedFileOperationCompleted);
            }
            this.InvokeAsync("DeleteUploadedFile", new object[] {
                        Username,
                        Password,
                        MyFileName}, this.DeleteUploadedFileOperationCompleted, userState);
        }
        
        private void OnDeleteUploadedFileOperationCompleted(object arg) {
            if ((this.DeleteUploadedFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUploadedFileCompleted(this, new DeleteUploadedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/GetUploadedFileDetails", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUploadedFileDetailsResult GetUploadedFileDetails(string Username, string Password) {
            object[] results = this.Invoke("GetUploadedFileDetails", new object[] {
                        Username,
                        Password});
            return ((GetUploadedFileDetailsResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUploadedFileDetailsAsync(string Username, string Password) {
            this.GetUploadedFileDetailsAsync(Username, Password, null);
        }
        
        /// <remarks/>
        public void GetUploadedFileDetailsAsync(string Username, string Password, object userState) {
            if ((this.GetUploadedFileDetailsOperationCompleted == null)) {
                this.GetUploadedFileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUploadedFileDetailsOperationCompleted);
            }
            this.InvokeAsync("GetUploadedFileDetails", new object[] {
                        Username,
                        Password}, this.GetUploadedFileDetailsOperationCompleted, userState);
        }
        
        private void OnGetUploadedFileDetailsOperationCompleted(object arg) {
            if ((this.GetUploadedFileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUploadedFileDetailsCompleted(this, new GetUploadedFileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/GetDetails", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetDetailsResult GetDetails(string Username, string Password, string ID) {
            object[] results = this.Invoke("GetDetails", new object[] {
                        Username,
                        Password,
                        ID});
            return ((GetDetailsResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailsAsync(string Username, string Password, string ID) {
            this.GetDetailsAsync(Username, Password, ID, null);
        }
        
        /// <remarks/>
        public void GetDetailsAsync(string Username, string Password, string ID, object userState) {
            if ((this.GetDetailsOperationCompleted == null)) {
                this.GetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDetails", new object[] {
                        Username,
                        Password,
                        ID}, this.GetDetailsOperationCompleted, userState);
        }
        
        private void OnGetDetailsOperationCompleted(object arg) {
            if ((this.GetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailsCompleted(this, new GetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/GetDetailsExtended", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetDetailsExtendedResult GetDetailsExtended(string Username, string Password, string ID) {
            object[] results = this.Invoke("GetDetailsExtended", new object[] {
                        Username,
                        Password,
                        ID});
            return ((GetDetailsExtendedResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailsExtendedAsync(string Username, string Password, string ID) {
            this.GetDetailsExtendedAsync(Username, Password, ID, null);
        }
        
        /// <remarks/>
        public void GetDetailsExtendedAsync(string Username, string Password, string ID, object userState) {
            if ((this.GetDetailsExtendedOperationCompleted == null)) {
                this.GetDetailsExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailsExtendedOperationCompleted);
            }
            this.InvokeAsync("GetDetailsExtended", new object[] {
                        Username,
                        Password,
                        ID}, this.GetDetailsExtendedOperationCompleted, userState);
        }
        
        private void OnGetDetailsExtendedOperationCompleted(object arg) {
            if ((this.GetDetailsExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailsExtendedCompleted(this, new GetDetailsExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/GetStatus", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetStatusResult GetStatus(string Username, string Password, string ID) {
            object[] results = this.Invoke("GetStatus", new object[] {
                        Username,
                        Password,
                        ID});
            return ((GetStatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusAsync(string Username, string Password, string ID) {
            this.GetStatusAsync(Username, Password, ID, null);
        }
        
        /// <remarks/>
        public void GetStatusAsync(string Username, string Password, string ID, object userState) {
            if ((this.GetStatusOperationCompleted == null)) {
                this.GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusOperationCompleted);
            }
            this.InvokeAsync("GetStatus", new object[] {
                        Username,
                        Password,
                        ID}, this.GetStatusOperationCompleted, userState);
        }
        
        private void OnGetStatusOperationCompleted(object arg) {
            if ((this.GetStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/GetBatchStatus", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetBatchStatusResult GetBatchStatus(string Username, string Password, int ID, string ItemID) {
            object[] results = this.Invoke("GetBatchStatus", new object[] {
                        Username,
                        Password,
                        ID,
                        ItemID});
            return ((GetBatchStatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchStatusAsync(string Username, string Password, int ID, string ItemID) {
            this.GetBatchStatusAsync(Username, Password, ID, ItemID, null);
        }
        
        /// <remarks/>
        public void GetBatchStatusAsync(string Username, string Password, int ID, string ItemID, object userState) {
            if ((this.GetBatchStatusOperationCompleted == null)) {
                this.GetBatchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchStatusOperationCompleted);
            }
            this.InvokeAsync("GetBatchStatus", new object[] {
                        Username,
                        Password,
                        ID,
                        ItemID}, this.GetBatchStatusOperationCompleted, userState);
        }
        
        private void OnGetBatchStatusOperationCompleted(object arg) {
            if ((this.GetBatchStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchStatusCompleted(this, new GetBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostalMethods/GetBatchDetails", RequestNamespace="PostalMethods", ResponseNamespace="PostalMethods", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetBatchDetailsResult GetBatchDetails(string Username, string Password, int ID, string ItemID) {
            object[] results = this.Invoke("GetBatchDetails", new object[] {
                        Username,
                        Password,
                        ID,
                        ItemID});
            return ((GetBatchDetailsResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchDetailsAsync(string Username, string Password, int ID, string ItemID) {
            this.GetBatchDetailsAsync(Username, Password, ID, ItemID, null);
        }
        
        /// <remarks/>
        public void GetBatchDetailsAsync(string Username, string Password, int ID, string ItemID, object userState) {
            if ((this.GetBatchDetailsOperationCompleted == null)) {
                this.GetBatchDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBatchDetails", new object[] {
                        Username,
                        Password,
                        ID,
                        ItemID}, this.GetBatchDetailsOperationCompleted, userState);
        }
        
        private void OnGetBatchDetailsOperationCompleted(object arg) {
            if ((this.GetBatchDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchDetailsCompleted(this, new GetBatchDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public enum WorkMode {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Production,
        
        /// <remarks/>
        Development,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public enum ImageSideScaling {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        FitToPage,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public enum PrintColor {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Black,
        
        /// <remarks/>
        FullColor,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public enum PostcardSize {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Postcard_4_25X6,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public enum MailingPriority {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        FirstClass,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class SendWordMailMergeResult {
        
        private int resultCodeField;
        
        private string resultDescriptionField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ResultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class ItemsStatusAndDescExtended {
        
        private int itemIDField;
        
        private int statusField;
        
        private string descriptionField;
        
        private decimal priceField;
        
        private int numOfSheetsField;
        
        private System.DateTime lastUpdateTimeField;
        
        /// <remarks/>
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int NumOfSheets {
            get {
                return this.numOfSheetsField;
            }
            set {
                this.numOfSheetsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateTime {
            get {
                return this.lastUpdateTimeField;
            }
            set {
                this.lastUpdateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class GetBatchDetailsResult {
        
        private int resultCodeField;
        
        private int idField;
        
        private decimal priceField;
        
        private System.DateTime submitTimeField;
        
        private System.DateTime completionTimeField;
        
        private string myDescriptionField;
        
        private MailerType mailerTypeField;
        
        private DetailsWorkMode workModeField;
        
        private string orientationField;
        
        private string envelopeField;
        
        private string paperField;
        
        private string printColorField;
        
        private string printSidesField;
        
        private string postcardField;
        
        private string nationalMailingField;
        
        private string internationalMailingField;
        
        private ItemsStatusAndDescExtended[] itemsField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SubmitTime {
            get {
                return this.submitTimeField;
            }
            set {
                this.submitTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CompletionTime {
            get {
                return this.completionTimeField;
            }
            set {
                this.completionTimeField = value;
            }
        }
        
        /// <remarks/>
        public string MyDescription {
            get {
                return this.myDescriptionField;
            }
            set {
                this.myDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public MailerType MailerType {
            get {
                return this.mailerTypeField;
            }
            set {
                this.mailerTypeField = value;
            }
        }
        
        /// <remarks/>
        public DetailsWorkMode WorkMode {
            get {
                return this.workModeField;
            }
            set {
                this.workModeField = value;
            }
        }
        
        /// <remarks/>
        public string Orientation {
            get {
                return this.orientationField;
            }
            set {
                this.orientationField = value;
            }
        }
        
        /// <remarks/>
        public string Envelope {
            get {
                return this.envelopeField;
            }
            set {
                this.envelopeField = value;
            }
        }
        
        /// <remarks/>
        public string Paper {
            get {
                return this.paperField;
            }
            set {
                this.paperField = value;
            }
        }
        
        /// <remarks/>
        public string PrintColor {
            get {
                return this.printColorField;
            }
            set {
                this.printColorField = value;
            }
        }
        
        /// <remarks/>
        public string PrintSides {
            get {
                return this.printSidesField;
            }
            set {
                this.printSidesField = value;
            }
        }
        
        /// <remarks/>
        public string Postcard {
            get {
                return this.postcardField;
            }
            set {
                this.postcardField = value;
            }
        }
        
        /// <remarks/>
        public string NationalMailing {
            get {
                return this.nationalMailingField;
            }
            set {
                this.nationalMailingField = value;
            }
        }
        
        /// <remarks/>
        public string InternationalMailing {
            get {
                return this.internationalMailingField;
            }
            set {
                this.internationalMailingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ItemsStatusAndDescExtended[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public enum MailerType {
        
        /// <remarks/>
        Letter,
        
        /// <remarks/>
        Postcard,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public enum DetailsWorkMode {
        
        /// <remarks/>
        Production,
        
        /// <remarks/>
        Development,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class LetterBatchStatusAndDesc {
        
        private int itemIDField;
        
        private int statusField;
        
        private string descriptionField;
        
        private System.DateTime lastUpdateTimeField;
        
        /// <remarks/>
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateTime {
            get {
                return this.lastUpdateTimeField;
            }
            set {
                this.lastUpdateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class GetBatchStatusResult {
        
        private int resultCodeField;
        
        private int idField;
        
        private LetterBatchStatusAndDesc[] statusesField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LetterBatchStatusAndDesc[] Statuses {
            get {
                return this.statusesField;
            }
            set {
                this.statusesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class LetterStatusAndDesc {
        
        private int idField;
        
        private int statusField;
        
        private string descriptionField;
        
        private System.DateTime lastUpdateTimeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateTime {
            get {
                return this.lastUpdateTimeField;
            }
            set {
                this.lastUpdateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class GetStatusResult {
        
        private int resultCodeField;
        
        private LetterStatusAndDesc[] statusesField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LetterStatusAndDesc[] Statuses {
            get {
                return this.statusesField;
            }
            set {
                this.statusesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExtendedDetails))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Details))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public abstract partial class GeneralDetails {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class ExtendedDetails : GeneralDetails {
        
        private int idField;
        
        private decimal priceField;
        
        private int numOfSheetsField;
        
        private System.DateTime submitTimeField;
        
        private System.DateTime completionTimeField;
        
        private int statusField;
        
        private string statusDescriptionField;
        
        private bool isBatchField;
        
        private string myDescriptionField;
        
        private MailerType mailerTypeField;
        
        private DetailsWorkMode workModeField;
        
        private string orientationField;
        
        private string envelopeField;
        
        private string paperField;
        
        private string printColorField;
        
        private string printSidesField;
        
        private string postcardField;
        
        private string nationalMailingField;
        
        private string internationalMailingField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int NumOfSheets {
            get {
                return this.numOfSheetsField;
            }
            set {
                this.numOfSheetsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SubmitTime {
            get {
                return this.submitTimeField;
            }
            set {
                this.submitTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CompletionTime {
            get {
                return this.completionTimeField;
            }
            set {
                this.completionTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string StatusDescription {
            get {
                return this.statusDescriptionField;
            }
            set {
                this.statusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBatch {
            get {
                return this.isBatchField;
            }
            set {
                this.isBatchField = value;
            }
        }
        
        /// <remarks/>
        public string MyDescription {
            get {
                return this.myDescriptionField;
            }
            set {
                this.myDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public MailerType MailerType {
            get {
                return this.mailerTypeField;
            }
            set {
                this.mailerTypeField = value;
            }
        }
        
        /// <remarks/>
        public DetailsWorkMode WorkMode {
            get {
                return this.workModeField;
            }
            set {
                this.workModeField = value;
            }
        }
        
        /// <remarks/>
        public string Orientation {
            get {
                return this.orientationField;
            }
            set {
                this.orientationField = value;
            }
        }
        
        /// <remarks/>
        public string Envelope {
            get {
                return this.envelopeField;
            }
            set {
                this.envelopeField = value;
            }
        }
        
        /// <remarks/>
        public string Paper {
            get {
                return this.paperField;
            }
            set {
                this.paperField = value;
            }
        }
        
        /// <remarks/>
        public string PrintColor {
            get {
                return this.printColorField;
            }
            set {
                this.printColorField = value;
            }
        }
        
        /// <remarks/>
        public string PrintSides {
            get {
                return this.printSidesField;
            }
            set {
                this.printSidesField = value;
            }
        }
        
        /// <remarks/>
        public string Postcard {
            get {
                return this.postcardField;
            }
            set {
                this.postcardField = value;
            }
        }
        
        /// <remarks/>
        public string NationalMailing {
            get {
                return this.nationalMailingField;
            }
            set {
                this.nationalMailingField = value;
            }
        }
        
        /// <remarks/>
        public string InternationalMailing {
            get {
                return this.internationalMailingField;
            }
            set {
                this.internationalMailingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class Details : GeneralDetails {
        
        private int idField;
        
        private decimal priceField;
        
        private int numOfSheetsField;
        
        private System.DateTime submitTimeField;
        
        private System.DateTime completionTimeField;
        
        private int statusField;
        
        private string statusDescriptionField;
        
        private bool isBatchField;
        
        private string myDescriptionField;
        
        private MailerType mailerTypeField;
        
        private DetailsWorkMode workModeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int NumOfSheets {
            get {
                return this.numOfSheetsField;
            }
            set {
                this.numOfSheetsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SubmitTime {
            get {
                return this.submitTimeField;
            }
            set {
                this.submitTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CompletionTime {
            get {
                return this.completionTimeField;
            }
            set {
                this.completionTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string StatusDescription {
            get {
                return this.statusDescriptionField;
            }
            set {
                this.statusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBatch {
            get {
                return this.isBatchField;
            }
            set {
                this.isBatchField = value;
            }
        }
        
        /// <remarks/>
        public string MyDescription {
            get {
                return this.myDescriptionField;
            }
            set {
                this.myDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public MailerType MailerType {
            get {
                return this.mailerTypeField;
            }
            set {
                this.mailerTypeField = value;
            }
        }
        
        /// <remarks/>
        public DetailsWorkMode WorkMode {
            get {
                return this.workModeField;
            }
            set {
                this.workModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDetailsExtendedResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDetailsResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class GetGeneralDetailsResult {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class GetDetailsExtendedResult : GetGeneralDetailsResult {
        
        private int resultCodeField;
        
        private ExtendedDetails[] detailsField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public ExtendedDetails[] Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class GetDetailsResult : GetGeneralDetailsResult {
        
        private int resultCodeField;
        
        private Details[] detailsField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public Details[] Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class FileDetails {
        
        private string fileNameField;
        
        private System.DateTime submitTimeField;
        
        private System.DateTime lastUsageField;
        
        private string permissionsField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SubmitTime {
            get {
                return this.submitTimeField;
            }
            set {
                this.submitTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUsage {
            get {
                return this.lastUsageField;
            }
            set {
                this.lastUsageField = value;
            }
        }
        
        /// <remarks/>
        public string Permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class GetUploadedFileDetailsResult {
        
        private int resultCodeField;
        
        private FileDetails[] uploadedFilesField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FileDetails[] UploadedFiles {
            get {
                return this.uploadedFilesField;
            }
            set {
                this.uploadedFilesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public partial class GetPDFResult {
        
        private int resultCodeField;
        
        private byte[] fileDataField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileData {
            get {
                return this.fileDataField;
            }
            set {
                this.fileDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostalMethods")]
    public enum Permissions {
        
        /// <remarks/>
        Account,
        
        /// <remarks/>
        User,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendLetterCompletedEventHandler(object sender, SendLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendLetterAndAddressCompletedEventHandler(object sender, SendLetterAndAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendLetterAndAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendLetterAndAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendPostcardAndAddressCompletedEventHandler(object sender, SendPostcardAndAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPostcardAndAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPostcardAndAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendWordMailMerge_CompressedCompletedEventHandler(object sender, SendWordMailMerge_CompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendWordMailMerge_CompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendWordMailMerge_CompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendWordMailMergeResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendWordMailMergeResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPDFCompletedEventHandler(object sender, GetPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetPDFResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetPDFResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelDeliveryCompletedEventHandler(object sender, CancelDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteUploadedFileCompletedEventHandler(object sender, DeleteUploadedFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUploadedFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUploadedFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUploadedFileDetailsCompletedEventHandler(object sender, GetUploadedFileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUploadedFileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUploadedFileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUploadedFileDetailsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUploadedFileDetailsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDetailsCompletedEventHandler(object sender, GetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDetailsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDetailsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDetailsExtendedCompletedEventHandler(object sender, GetDetailsExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailsExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailsExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDetailsExtendedResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDetailsExtendedResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetStatusCompletedEventHandler(object sender, GetStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetStatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetStatusResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBatchStatusCompletedEventHandler(object sender, GetBatchStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetBatchStatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetBatchStatusResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBatchDetailsCompletedEventHandler(object sender, GetBatchDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetBatchDetailsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetBatchDetailsResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591